---

- name: Update kubeconfig with correct cluster name and user
  ansible.builtin.replace:
    path: /etc/rancher/k3s/k3s.yaml
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
    after: "{{ item.after | default(omit) }}"
  loop:
    - regexp: "name: default"
      replace: "name: {{ k3s_cluster_name }}"
    - regexp: 'cluster: ""'
      replace: "cluster: {{ k3s_cluster_name }}"
    - regexp: "cluster: .*"
      replace: 'cluster: {{ k3s_cluster_name }}'
      after: "contexts:"
    - regexp: "current-context: default"
      replace: "current-context: {{ k3s_cluster_name }}"
    - regexp: "name: .*"
      replace: "name: {{ new_admin_user }}"
      after: "users:"
    - regexp: "user: .*"
      replace: "user: {{ new_admin_user }}"
      after: "contexts:"

- name: "Kube configuration for user {{ new_admin_user }}"
  become: false
  block:
    - name: Create the .kube directory if it does not exist
      ansible.builtin.file:
        path: "/home/{{ new_admin_user }}/.kube"
        state: directory
        owner: "{{ new_admin_user }}"
        group: "{{ new_admin_user }}"
        mode: '0700'

    - name: Copy K3s kubeconfig to user's .kube/config
      ansible.builtin.copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "/home/{{ new_admin_user }}/.kube/config"
        owner: "{{ new_admin_user }}"
        group: "{{ new_admin_user }}"
        mode: '0644'
        remote_src: true

    - name: Set permissions for .kube/config
      ansible.builtin.file:
        path: "/home/{{ new_admin_user }}/.kube/config"
        owner: "{{ new_admin_user }}"
        group: "{{ new_admin_user }}"
        mode: '0600'

    - name: Set KUBECONFIG environment variables in the user's shell profile
      ansible.builtin.lineinfile:
        path: "/home/{{ new_admin_user }}/{{ ansible_env.SHELL | regex_replace('.*/', '.') }}rc"
        line: |
          export KUBECONFIG=$(find $HOME/.kube -type f -name "config*" | tr '\n' ':')
        create: true
        mode: '0600'
