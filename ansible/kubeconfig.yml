---
- name: Retrieve and Configure kubeconfig for Prod and Preprod
  hosts: masters
  remote_user: "{{ new_admin_user }}"
  tasks:
    - name: Ensure local kubeconfig directory exists
      delegate_to: localhost
      ansible.builtin.file:
        path: "/tmp/kubeconfig"
        state: directory
        mode: '0755'

    - name: Fetch kubeconfig file from master node
      ansible.builtin.fetch:
        src: "/etc/rancher/k3s/k3s.yaml"
        dest: "/tmp/kubeconfig/kubeconfig_{{ k3s_cluster_name }}.yaml"
        flat: true

- name: Setup kubeconfig locally
  hosts: local
  tasks:
    - name: Ensure .kube directory exists in user's home
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.kube"
        state: directory
        mode: '0755'

    - name: Move kubeconfig files dynamically to local .kube directory
      ansible.builtin.copy:
        src: "/tmp/kubeconfig/kubeconfig_{{ item }}.yaml"
        dest: "{{ ansible_env.HOME }}/.kube/config_lab_{{ 'prod' if 'prod' in item else 'preprod' }}"
        mode: '0644'
      loop: "{{ groups['masters'] }}"

    - name: Update server IP in kubeconfig
      ansible.builtin.shell: |
        set -o pipefail
        sed -i 's|server: https://127.0.0.1:6443|server: https://{{ hostvars[item]['ansible_host'] }}:6443|' "{{ ansible_env.HOME }}/.kube/config_lab_{{ 'prod' if 'prod' in item else 'preprod' }}"
      loop: "{{ groups['masters'] }}"
      when: hostvars[item]['ansible_host'] is defined

    - name: Set KUBECONFIG environment variables in the user's shell profile
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/{{ ansible_env.SHELL | regex_replace('.*/', '.') }}rc"
        line: |
          export KUBECONFIG=$(find $HOME/.kube -type f -name "config*" | tr '\n' ':')
        create: true
        mode: '0600'
